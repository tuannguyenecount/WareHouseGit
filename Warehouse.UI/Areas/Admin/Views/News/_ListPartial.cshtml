@using PagedList;
@using PagedList.Mvc;
@model IPagedList<News>

@if (Model.Count > 0) {
    <div class="clearfix">
        @Html.ValidationSummary("", new { @class = "text-danger" })
    </div>
    <table class="table table-hover">
        <tr class="success">
            <th class="text-center">
                Hình
            </th>
            <th class="text-center">
                @Ajax.ActionLink("Id", "ShowList", new { tukhoa = ViewBag.tuKhoa, sort = ViewBag.sortNext, sortName = "Id", page = ViewBag.Page, Poster = ViewBag.Poster }, new AjaxOptions() { HttpMethod = "Get", OnFailure = "alert('Không thể sắp xếp')", InsertionMode = InsertionMode.Replace, UpdateTargetId = "result" })
            </th>
            <th class="col-md-3">
                @Ajax.ActionLink("Tiêu đề", "ShowList", new { tukhoa = ViewBag.tuKhoa, sort = ViewBag.sortNext, sortName = "Title", page = ViewBag.Page, Poster = ViewBag.Poster }, new AjaxOptions() { HttpMethod = "Get", OnFailure = "alert('Không thể sắp xếp')", InsertionMode = InsertionMode.Replace, UpdateTargetId = "result" })
            </th>
            <th class="col-md-4">
                Giới thiệu
            </th>
            <th>
                Tác giả
            </th>
            <th></th>
            <th>Xóa</th>
        </tr>

        @foreach (var item in Model) {
            <tr>
                <td id="Image@(item.Id)">
                    <a target="_blank" href="@Url.Action("ChiTiet", "News", new { area="",  Alias = item.Alias_SEO})">
                        <img src="@item.ImageCustom" width="90" height="auto" />
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(m => item.Id)
                </td>
                <td id="Title@(item.Id)">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td id="Introduce@(item.Id)">
                    @Html.DisplayFor(modelItem => item.Introduce)
                </td>
                <td id="Poster@(item.Id)">
                    @if (item.AspNetUser != null) {
                        <span>@item.AspNetUser.FullName</span>
                    }

                </td>
                <td colspan="2"></td>
            </tr>
            <tr class="warning">
                <td>@Ajax.ActionLink("Thay hình", "ChangeImage", new { id = item.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Image" + item.Id, HttpMethod = "Get", OnFailure = "alert('Xảy ra lỗi khi gọi Ajax')" }, new { @class = "btn btn-default btn-sm btnThayImage" })</td>
                <td></td>
                <td>
                    @Ajax.ActionLink("Sửa tiêu đề", "EditTitle", new { id = item.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Title" + item.Id, HttpMethod = "Get", OnFailure = "alert('Xảy ra lỗi khi gọi Ajax')" }, new { @class = "btn btn-default btn-sm btnEditTitle" })
                </td>
                <td>@Ajax.ActionLink("Sửa giới thiệu", "EditIntroduce", new { id = item.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Introduce" + item.Id, HttpMethod = "Get", OnFailure = "alert('Xảy ra lỗi khi gọi Ajax')" }, new { @class = "btn btn-default btn-sm btnEditIntroduce" })</td>
                <td>@Ajax.ActionLink("Sửa tác giả", "EditAuthor", new { id = item.Id }, new AjaxOptions() { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Poster" + item.Id, HttpMethod = "Get", OnFailure = "alert('Xảy ra lỗi khi gọi Ajax')" }, new { @class = "btn btn-default btn-sm btnEditAuthor" })</td>
                <td>
                    <a href="@Url.Action("XemContent", new { id = item.Id})" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-zoom-in"></span> Xem, sửa nội dung</a>
                </td>
                <td>
                    <a class="btn btn-sm btn-danger" href="@Url.Action("Delete",new { id = item.Id })">Xóa</a>
                </td>
            </tr>
        }
        <tr>
            <td colspan="7" class="text-center">
                @Html.PagedListPager(Model, page => Url.Action("ShowList", new { tukhoa = ViewBag.tuKhoa, sort = ViewBag.sortCurrent, sortName = ViewBag.sortName, page = page, Poster = ViewBag.Poster }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayLinkToLastPage = PagedListDisplayMode.Always, DisplayLinkToFirstPage = PagedListDisplayMode.Always, DisplayPageCountAndCurrentLocation = true }, new AjaxOptions() { UpdateTargetId = "result", InsertionMode = InsertionMode.Replace, OnFailure = "alert('Không thể phân trang')", HttpMethod = "Get" }))
            </td>
        </tr>

    </table>
}
else {
    <div class="alert alert-info">
        Không có dòng thỏa yêu cầu.
    </div>
}
